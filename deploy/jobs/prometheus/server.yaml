apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: 'prometheus'
    component: 'server'
  name: 'prometheus-server'
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: 'prometheus'
        component: 'server'
    spec:
      serviceAccountName: 'prometheus-server'
      containers:
        - name: 'prometheus-server-configmap-reloader'
          image: 'jimmidyson/configmap-reload:v0.1'
          imagePullPolicy: 'IfNotPresent'
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9090/-/reload
          resources: {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
        - name: 'prometheus-server'
          image: 'prom/prometheus:v1.8.0'
          imagePullPolicy: 'IfNotPresent'
          args:
            - --alertmanager.url=http://prometheus-alertmanager:80
            - --config.file=/etc/config/prometheus.yml
            - --storage.local.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /status
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources: {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
      nodeSelector: {}
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: 'prometheus-server'
        - name: storage-volume
          persistentVolumeClaim:
            claimName: 'prometheus-server'
---
apiVersion: v1
kind: Service
metadata:
  name: 'prometheus-server'
  labels:
    app: 'prometheus'
    component: 'server'
spec:
  externalIPs: []
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    app: 'prometheus'
    component: 'server'
  type: 'ClusterIP'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: 'prometheus'
    component: 'server'
  name: 'prometheus-server'
