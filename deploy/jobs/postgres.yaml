apiVersion: v1
kind: Service
metadata:
  name: "postgres"
  labels:
    app: "postgres"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
spec:
  type: "ClusterIP"
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: "postgres"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "postgres"
  labels:
    app: "postgres"
spec:
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      nodeSelector: {}
      tolerations: []
      containers:
      - name: "postgres"
        image: "postgres:10-alpine"
        imagePullPolicy: 'IfNotPresent'
        env:
        - name: POSTGRES_USER
          value: 'postgres'
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: 'postgres'
        - name: POSTGRES_DB
          value: 'postgres'
        - name: POSTGRES_INITDB_ARGS
          value: ''
        - name: PGDATA
          value: /data/postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "postgres"
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
        volumeMounts:
        - name: data
          mountPath: '/data'
      - name: metrics
        image: 'wrouesnel/postgres_exporter:v0.1.1'
        imagePullPolicy: 'IfNotPresent'
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://postgres@127.0.0.1:5432?sslmode=disable
        ports:
        - name: metrics
          containerPort: 9187
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: 'postgres'
