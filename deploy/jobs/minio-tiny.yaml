apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: 'minio-tiny'
  labels:
    app: 'minio-tiny'
spec:
  selector:
    matchLabels:
      app: 'minio-tiny'
  template:
    metadata:
      name: 'minio-tiny'
      labels:
        app: 'minio-tiny'
    spec:
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
        - name: export
          persistentVolumeClaim:
            claimName: 'minio-tiny'
        - name: minio-server-config
          configMap:
            name: minio-tiny-config-cm
        - name: minio-tiny-user
          secret:
            secretName: minio-tiny-user
      containers:
        - name: minio
          image: 'minio/minio:RELEASE.2017-10-27T18-59-02Z'
          imagePullPolicy: 'IfNotPresent'
          args: ["server", '/export']
          volumeMounts:
            - name: export
              mountPath: '/export'
            - name: minio-server-config
              mountPath: '/root/.minio'
            - name: podinfo
              mountPath: /podinfo
              readOnly: false
          ports:
            - name: service
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-tiny-user
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-tiny-user
                  key: secretkey
          livenessProbe:
            tcpSocket:
              port: 9000
            timeoutSeconds: 1
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
---
kind: Service
apiVersion: v1
metadata:
  name: minio-tiny-svc
  labels:
    app: 'minio-tiny'
spec:
  type: 'ClusterIP'
  selector:
    app: 'minio-tiny'
  ports:
    - name: service
      port: 9000
      targetPort: 9000
      protocol: TCP
